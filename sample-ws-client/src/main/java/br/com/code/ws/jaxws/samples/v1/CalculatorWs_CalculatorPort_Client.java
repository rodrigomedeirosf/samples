
package br.com.code.ws.jaxws.samples.v1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import br.com.code.sample.ws.CalculatorService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.4
 * 2015-02-16T18:33:54.107-02:00
 * Generated source version: 3.0.4
 * 
 */
public final class CalculatorWs_CalculatorPort_Client {

    private static final QName SERVICE_NAME = new QName("http://ws.sample.code.com.br/", "CalculatorService");

    private CalculatorWs_CalculatorPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = CalculatorService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        CalculatorService ss = new CalculatorService(wsdlURL, SERVICE_NAME);
        CalculatorWs port = ss.getCalculatorPort();  
        
        {
        System.out.println("Invoking divide...");
        java.lang.Integer _divide_arg0 = null;
        java.lang.Integer _divide_arg1 = null;
        java.lang.Double _divide__return = port.divide(_divide_arg0, _divide_arg1);
        System.out.println("divide.result=" + _divide__return);


        }
        {
        System.out.println("Invoking add...");
        java.lang.Integer _add_arg0 = null;
        java.lang.Integer _add_arg1 = null;
        java.lang.Integer _add__return = port.add(_add_arg0, _add_arg1);
        System.out.println("add.result=" + _add__return);


        }
        {
        System.out.println("Invoking subtract...");
        java.lang.Integer _subtract_arg0 = null;
        java.lang.Integer _subtract_arg1 = null;
        java.lang.Integer _subtract__return = port.subtract(_subtract_arg0, _subtract_arg1);
        System.out.println("subtract.result=" + _subtract__return);


        }
        {
        System.out.println("Invoking multiply...");
        java.lang.Integer _multiply_arg0 = null;
        java.lang.Integer _multiply_arg1 = null;
        java.lang.Integer _multiply__return = port.multiply(_multiply_arg0, _multiply_arg1);
        System.out.println("multiply.result=" + _multiply__return);


        }

        System.exit(0);
    }

}
